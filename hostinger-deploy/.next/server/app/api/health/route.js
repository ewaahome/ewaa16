"use strict";(()=>{var e={};e.id=8829,e.ids=[8829],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},18090:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>l,originalPathname:()=>m,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>c,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>d});var a={};r.r(a),r.d(a,{GET:()=>GET}),r(78976);var n=r(10884),o=r(16132),s=r(95798),i=r(35961);async function GET(){try{let e=await i.Z.user.count();return s.Z.json({status:"healthy",timestamp:new Date().toISOString(),environment:"production",dbConnected:!0,userCount:e,version:process.env.npm_package_version||"0.1.0"})}catch(e){return console.error("Health check error:",e),s.Z.json({status:"unhealthy",timestamp:new Date().toISOString(),environment:"production",dbConnected:!1,error:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"C:\\Users\\NajiX\\Desktop\\hhhhhhhhhh\\next13-airbnb-clone-master\\app\\api\\health\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:h,serverHooks:c,headerHooks:l,staticGenerationBailout:d}=u,m="/api/health/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[6126,6449,4933,5798,5961],()=>__webpack_exec__(18090));module.exports=r})();