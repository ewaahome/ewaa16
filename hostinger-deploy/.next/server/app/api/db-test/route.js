"use strict";(()=>{var e={};e.id=8816,e.ids=[8816],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},43152:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>l,originalPathname:()=>m,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>p,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>h});var r={};a.r(r),a.d(r,{GET:()=>GET}),a(78976);var s=a(10884),n=a(16132),o=a(95798),i=a(35961);async function GET(){try{await i.Z.$connect();let e=await i.Z.$runCommandRaw({ping:1}),t={connected:!0,ping:e,usersCount:await i.Z.user.count(),listingsCount:await i.Z.listing.count(),reservationsCount:await i.Z.reservation.count(),timestamp:new Date().toISOString()};return await i.Z.$disconnect(),o.Z.json({status:"success",message:"Database connection successful",details:t})}catch(e){console.error("Database test failed:",e);try{await i.Z.$disconnect()}catch(e){console.error("Error during disconnect:",e)}return o.Z.json({status:"error",message:"Database connection failed",error:e.message||"Unknown error",code:e.code,stack:void 0},{status:500})}}let c=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/db-test/route",pathname:"/api/db-test",filename:"route",bundlePath:"app/api/db-test/route"},resolvedPagePath:"C:\\Users\\NajiX\\Desktop\\hhhhhhhhhh\\next13-airbnb-clone-master\\app\\api\\db-test\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:d,serverHooks:p,headerHooks:l,staticGenerationBailout:h}=c,m="/api/db-test/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[6126,6449,4933,5798,5961],()=>__webpack_exec__(43152));module.exports=a})();